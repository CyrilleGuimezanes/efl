//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ELSConnect {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Res {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Res() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ELSConnect.Res", typeof(Res).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 
        ///
        ///.widget-container{
        ///  margin: 5px;
        ///  background: #FEFEFE;
        ///  border: 1px solid #E2E2E2;
        ///  border-radius: 4px;
        ///  width: 100%;
        ///  overflow: hidden;
        ///}
        ///
        ///.widget-container .top-bar{
        ///  font-size: 20px;
        ///  line-height: 20px;
        ///  background: #FFF;
        ///  color: #7A7A79;
        ///  border: 1px solid #7A7A79;
        ///  padding: 5px;
        ///}
        ///.helper {
        ///    display: inline-block;
        ///    height: 100%;
        ///    vertical-align: middle;
        ///}
        ///
        ///.widget-container .top-bar .title, .widget-container .top-bar .actions{
        ///
        ///  display: inline-block;        /// [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string app {
            get {
                return ResourceManager.GetString("app", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à // Backbone.js 0.9.2
        ///
        ///// (c) 2010-2012 Jeremy Ashkenas, DocumentCloud Inc.
        ///// Backbone may be freely distributed under the MIT license.
        ///// For all details and documentation:
        ///// http://backbonejs.org
        ///(function(){var l=this,y=l.Backbone,z=Array.prototype.slice,A=Array.prototype.splice,g;g=&quot;undefined&quot;!==typeof exports?exports:l.Backbone={};g.VERSION=&quot;0.9.2&quot;;var f=l._;!f&amp;&amp;&quot;undefined&quot;!==typeof require&amp;&amp;(f=require(&quot;underscore&quot;));var i=l.jQuery||l.Zepto||l.ender;g.setDomLibrary=function(a){i=a};g.noConflict=functi [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string backbone {
            get {
                return ResourceManager.GetString("backbone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap close {
            get {
                object obj = ResourceManager.GetObject("close", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à // A List of People
        ///var ResultsCollection = Backbone.Collection.extend({
        ///	model: Result,
        ///	strategies: {
        ///		date: function (res) {
        ///			var date = res.get(&quot;date&quot;);
        ///			if (!date)
        ///			return -1;
        ///			return -date.getTime();
        ///		},
        ///		revelance: function (res) { return -res.get(&quot;revelance&quot;); },
        ///	},
        ///	sortByDate: function () {
        ///		this.comparator = this.strategies[&quot;date&quot;];
        ///		this.models.sort();
        ///	},
        ///	sortByRevelance: function () {
        ///		this.comparator = this.strategies[&quot;revelance&quot;];
        ///		this.models.sort();
        ///	},        /// [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string collection_result {
            get {
                return ResourceManager.GetString("collection_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à var config = {
        ///	BASE_URL: &quot;http://int.abonnes.efl.fr&quot;
        ///}
        ///var engines = {
        ///	google: {
        ///		field: &quot;#lst-ib&quot;,
        ///		results: &quot;#center_col&quot;,
        ///		tag: &quot;div&quot;
        ///	},
        ///	bing: {
        ///		field: &quot;#sb_form_q&quot;,
        ///		results: &quot;#b_results&quot;,
        ///		tag: &quot;li&quot;
        ///	},
        ///	yahoo: {
        ///		field: &quot;#yschsp&quot;,
        ///		results: &quot;#left&quot;,
        ///		tag: &quot;div&quot;
        ///	}
        ///}
        ///var engine = null;
        ///.
        /// </summary>
        public static string config {
            get {
                return ResourceManager.GetString("config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] db {
            get {
                object obj = ResourceManager.GetObject("db", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;&lt;/head&gt;&lt;body cz-shortcut-listen=&quot;true&quot;&gt;&lt;input type=&quot;hidden&quot; name=&quot;isMorePage&quot; value=&quot;true&quot; class=&quot;isMorePage&quot;&gt;
        ///&lt;input type=&quot;hidden&quot; name=&quot;resultCount&quot; value=&quot;73&quot; class=&quot;resultCount&quot;&gt;
        ///&lt;div class=&quot;resultItem&quot;&gt;
        ///&lt;p class=&quot;resultTitle&quot;&gt;
        ///&lt;a class=&quot;openDocumentLink&quot; id=&quot;AC5CBF9C8AX1CF3X483BXBED8X564F4E928FD1&quot; key=&quot;PFISC&quot; href=&quot;#&quot;&gt;Entreprises - ... - Option des PBRD au titre des acquisitions intracommunautaires - Option par une personne physiquePrécisions sur l&apos;option  [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string filter {
            get {
                return ResourceManager.GetString("filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_128 {
            get {
                object obj = ResourceManager.GetObject("icon_128", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_16 {
            get {
                object obj = ResourceManager.GetObject("icon_16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_19 {
            get {
                object obj = ResourceManager.GetObject("icon_19", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon_38 {
            get {
                object obj = ResourceManager.GetObject("icon_38", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à /*! iScroll v5.1.3 ~ (c) 2008-2014 Matteo Spinelli ~ http://cubiq.org/license */
        ///(function (window, document, Math) {
        ///var rAF = window.requestAnimationFrame	||
        ///	window.webkitRequestAnimationFrame	||
        ///	window.mozRequestAnimationFrame		||
        ///	window.oRequestAnimationFrame		||
        ///	window.msRequestAnimationFrame		||
        ///	function (callback) { window.setTimeout(callback, 1000 / 60); };
        ///
        ///var utils = (function () {
        ///	var me = {};
        ///
        ///	var _elementStyle = document.createElement(&apos;div&apos;).style;
        ///	var _vendor = (function () {
        ///		var ve [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string iscroll {
            get {
                return ResourceManager.GetString("iscroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à /*!
        /// * jQuery JavaScript Library v1.8.2
        /// * http://jquery.com/
        /// *
        /// * Includes Sizzle.js
        /// * http://sizzlejs.com/
        /// *
        /// * Copyright 2012 jQuery Foundation and other contributors
        /// * Released under the MIT license
        /// * http://jquery.org/license
        /// *
        /// * Date: Thu Sep 20 2012 21:13:05 GMT-0400 (Eastern Daylight Time)
        /// */
        ///(function( window, undefined ) {
        ///var
        ///	// A central reference to the root jQuery(document)
        ///	rootjQuery,
        ///
        ///	// The deferred used on DOM ready
        ///	readyList,
        ///
        ///	// Use the correct document accordingly with wind [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string jquery {
            get {
                return ResourceManager.GetString("jquery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap loader {
            get {
                object obj = ResourceManager.GetObject("loader", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap logo {
            get {
                object obj = ResourceManager.GetObject("logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] matiere {
            get {
                object obj = ResourceManager.GetObject("matiere", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à // Person Model
        ///var Widget = Backbone.Model.extend({
        ///	defaults: {
        ///		title: &quot;Editions Lefebvre Sarrut&quot;,
        ///		baseUrl: getUrl(&quot;&quot;),
        ///		compress: 1,//0 = fermé, 1=semi ouvert, 2=ouvert + desc
        ///		sort: &quot;revelance&quot;,
        ///		error: {
        ///			logged: false,
        ///			https: false
        ///		},
        ///		results: null,
        ///		filters: null,
        ///		filterBy: null,
        ///		fullResultUrl: &quot;&quot;
        ///	}
        ///});
        ///var Result = Backbone.Model.extend({
        ///	defaults: {
        ///		title: &quot;&quot;,
        ///		brief: &quot;&quot;,
        ///		source:  &quot;&quot;,
        ///		serie:  &quot;&quot;,
        ///		category:  &quot;&quot;,
        ///		url: &quot;&quot;,
        ///		date:  new Date(), [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string models {
            get {
                return ResourceManager.GetString("models", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap open {
            get {
                object obj = ResourceManager.GetObject("open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;
        ///&lt;!--[if lt IE 7]&gt; &lt;html lang=&quot;fr&quot; class=&quot;lt-ie9 lt-ie8 lt-ie7&quot;&gt; &lt;![endif]--&gt;
        ///&lt;!--[if IE 7]&gt;	&lt;html lang=&quot;fr&quot; class=&quot;lt-ie9 lt-ie8&quot;&gt; &lt;![endif]--&gt;
        ///&lt;!--[if IE 8]&gt;	&lt;html lang=&quot;fr&quot; class=&quot;lt-ie9&quot;&gt; &lt;![endif]--&gt;
        ///&lt;!--[if IE 9 ]&gt; &lt;html lang=&quot;fr&quot; class=&quot;ie9&quot;&gt; &lt;![endif]--&gt;
        ///&lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt; &lt;html lang=&quot;fr&quot;&gt; &lt;!--&lt;![endif]--&gt;
        ///&lt;head&gt;
        ///&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;        /// [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string page {
            get {
                return ResourceManager.GetString("page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;!doctype html&gt;
        ///&lt;!--
        /// This page is shown when the extension button is clicked, because the
        /// &quot;browser_action&quot; field in manifest.json contains the &quot;default_popup&quot; key with
        /// value &quot;popup.html&quot;.
        /// --&gt;
        ///&lt;html&gt;
        ///  &lt;head&gt;
        ///    &lt;title&gt;Getting Started Extension&apos;s Popup&lt;/title&gt;
        ///    &lt;link rel=&quot;stylesheet&quot; href=&quot;../styles/css/app.css&quot; charset=&quot;utf-8&quot;&gt;
        ///
        ///    &lt;script src=&quot;../scripts/jquery.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
        ///  &lt;/head&gt;
        ///  &lt;body&gt;
        ///    &lt;ul class=&quot;matieres&quot;&gt;
        ///      &lt;li class=&quot;matiere&quot;&gt;&lt;/li&gt;
        ///    &lt;/ul&gt;
        ///    &lt;script src=&quot;../s [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string popup {
            get {
                return ResourceManager.GetString("popup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à /*
        /// * js-sha256 v0.3.0
        /// * https://github.com/emn178/js-sha256
        /// *
        /// * Copyright 2014-2015, emn178@gmail.com
        /// *
        /// * Licensed under the MIT license:
        /// * http://www.opensource.org/licenses/MIT
        /// */
        ///(function(I,R){var K=&quot;undefined&quot;!=typeof module;K&amp;&amp;(I=global);var a=&quot;0123456789abcdef&quot;.split(&quot;&quot;),Q=[-2147483648,8388608,32768,128],C=[24,16,8,0],M=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,324 [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string sha256 {
            get {
                return ResourceManager.GetString("sha256", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à //     Underscore.js 1.4.2
        /////     http://underscorejs.org
        /////     (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.
        /////     Underscore may be freely distributed under the MIT license.
        ///
        ///(function() {
        ///
        ///  // Baseline setup
        ///  // --------------
        ///
        ///  // Establish the root object, `window` in the browser, or `global` on the server.
        ///  var root = this;
        ///
        ///  // Save the previous value of the `_` variable.
        ///  var previousUnderscore = root._;
        ///
        ///  // Establish the object that gets returned to break out of a loop iteration.
        ///  va [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string underscore {
            get {
                return ResourceManager.GetString("underscore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à var getUrl = function(uri){
        ///  return chrome.extension.getURL(uri);
        ///}
        ///.
        /// </summary>
        public static string utils {
            get {
                return ResourceManager.GetString("utils", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à // The View for a Person
        ///var FilterView = Backbone.View.extend({
        ///	className: &apos;filter-item&apos;,
        ///	template: function(){
        ///		return _.template($(&apos;#filterTemplate&apos;).html() )
        ///	},
        ///	render: function(parent) {
        ///		var slug = function(name){
        ///			return name
        ///        .toLowerCase()
        ///        .replace(/[^\w ]+/g,&apos;&apos;)
        ///        .replace(/ +/g,&apos;-&apos;)
        ///        ;
        ///		}
        ///		var html = this.template()({
        ///			item: this.model.toJSON(),
        ///			attr: slug(this.model.get(&quot;name&quot;)),
        ///			parent: &quot;none&quot;,
        ///			fid: this.model.get(&quot;id&quot;)
        ///		});
        /// [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string view_filter {
            get {
                return ResourceManager.GetString("view_filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à // The View for a Person
        ///var ResultView = Backbone.View.extend({
        ///	className: &apos;result-item&apos;,
        ///	template: function(){
        ///		return _.template($(&apos;#resultTemplate&apos;).html() )
        ///	},
        ///
        ///	render: function(parent) {
        ///		return this.template()({
        ///			item: this.model.toJSON(),
        ///			parent: parent
        ///		});
        ///	}
        ///});
        ///.
        /// </summary>
        public static string view_result {
            get {
                return ResourceManager.GetString("view_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à // View for all people
        ///var WidgetView = Backbone.View.extend({
        ///	tagName: &apos;div&apos;,
        ///	className: &apos;main-widget&apos;,
        ///	loading: false,
        ///	toggleLoading: function(){
        ///		if (!this.loading){
        ///			$(&quot;.results&quot;).hide();
        ///			$(&quot;.loader&quot;).show();
        ///		}
        ///		else{
        ///			$(&quot;.results&quot;).show();
        ///			$(&quot;.loader&quot;).hide();
        ///		}
        ///		this.loading = !this.loading;
        ///
        ///	},
        ///	template: function(){
        ///		return _.template($(&apos;#widgetTemplate&apos;).html() )
        ///	},
        ///	initialize: function() {
        ///	},
        ///	events: {
        ///		&quot;click .collapse-btn&quot;:     &quot;toggleOpen&quot;,
        ///		 [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string view_widget {
            get {
                return ResourceManager.GetString("view_widget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;script id=&quot;widgetTemplate&quot; type=&quot;text/template&quot;&gt;
        ///&lt;div class=&quot;widget-container&quot;&gt;
        ///  &lt;div class=&quot;top-bar&quot;&gt;
        ///      &lt;div class=&quot;title&quot;&gt;
        ///        &lt;span class=&quot;helper&quot;&gt;&lt;/span&gt;
        ///        &lt;img src=&quot;&lt;%= baseUrl %&gt;images/icon-38.png&quot; alt=&quot;&quot;&gt;
        ///        &lt;%= title %&gt;
        ///      &lt;/div&gt;
        ///      &lt;% if (!error.logged &amp;&amp; !error.https) { %&gt;
        ///        &lt;div class=&quot;actions&quot;&gt;
        ///          &lt;div class=&quot;show&quot;&gt;
        ///            &lt;% if (compress == 1) { %&gt;
        ///              &lt;div class=&quot;collapse-btn&quot; data-compress=&quot;0&quot;&gt;&lt;img src=&quot;&lt;%= baseUrl %&gt;images/cl [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string widget {
            get {
                return ResourceManager.GetString("widget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 
        ///var widgetModel = new Widget({
        ///	results: resultsCollection,
        ///	filters: filtersCollection
        ///});
        ///var widgetView = new WidgetView({model: widgetModel});
        ///
        ///
        ///
        ///$(function() {
        ///	/*var tmout = setTimeout(function(){
        ///	widgetModel.attributes.error.https = true;
        ///	/*$(&quot;#rhs&quot;) //col de droite
        ///	$(&quot;#center_col&quot;).prepend(widgetView.render().el);
        ///}, 10000)*/
        ///var renderWidget = function(){
        ///	widgetView.model.set(&quot;filterBy&quot;, null);
        ///	widgetView.getResults();
        ///}
        ///
        ///$(&quot;body&quot;).prepend($(&quot;&lt;div class=&apos;widget-templates&apos;/&gt;&quot;).load(getUrl(&quot;vie [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string widget_generator {
            get {
                return ResourceManager.GetString("widget_generator", resourceCulture);
            }
        }
    }
}
